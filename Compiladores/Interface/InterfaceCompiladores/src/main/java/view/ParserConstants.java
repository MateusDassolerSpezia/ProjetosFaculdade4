package view;

public interface ParserConstants
{
    int START_SYMBOL = 43;

    int FIRST_NON_TERMINAL    = 43;
    int FIRST_SEMANTIC_ACTION = 83;

    int[][] PARSER_TABLE =
    {
        { -1, -1, -1, -1, -1, -1, -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  1, -1, -1, -1, -1, -1, -1,  1, -1, -1,  1, -1, -1, -1, -1,  1,  1,  1,  1, -1, -1,  1,  1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  2, -1, -1, -1, -1, -1, -1,  2, -1, -1,  2, -1, -1,  3, -1,  2,  2,  2,  2, -1, -1,  2,  2, -1,  2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  5, -1, -1, -1, -1, -1, -1,  4, -1, -1,  5, -1, -1, -1, -1,  4,  5,  4,  4, -1, -1,  5,  5, -1,  4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1,  6, -1, -1, -1, -1, -1, -1, -1,  6, -1,  6,  6, -1, -1, -1, -1, -1,  6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 17, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, -1, -1, -1, -1, -1, 20, -1, -1, -1, -1, 19, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, 23, -1, -1, -1, -1, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, 22, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1,  7, -1, -1, -1, -1, -1, -1, -1,  7, -1,  7,  8, -1, -1, -1, -1, -1,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1,  9, -1, -1, -1, -1, -1, -1, -1, 11, -1, 10, -1, -1, -1, -1, -1, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 16, 15 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 24, 25, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, 26, -1, -1, -1, -1, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 42, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 47, 47, 47, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 47, -1, -1, -1, -1, 47, -1, -1, -1, -1, -1, 47, -1, 47, 47, -1, -1, -1, -1, -1, -1, -1, -1, 47, -1, -1, -1 },
        { -1, 28, 28, 28, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 28, -1, -1, -1, -1, 28, -1, -1, -1, -1, -1, 28, -1, 28, 28, -1, -1, -1, -1, -1, -1, -1, -1, 28, -1, -1, -1 },
        { -1, 29, 29, 29, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 29, -1, -1, -1, -1, 29, -1, -1, -1, -1, -1, 29, -1, 29, 29, -1, -1, -1, -1, -1, -1, -1, -1, 29, -1, -1, -1 },
        { -1, 31, -1, -1, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 33, -1, -1, 32, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 35, -1, 34 },
        { -1, 37, 37, 37, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 37, -1, -1, -1, -1, 37, -1, -1, -1, -1, -1, 37, -1, 37, 37, -1, -1, -1, -1, -1, -1, -1, -1, 37, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 39, -1, 38 },
        { -1, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, 43, -1, -1, -1, -1, -1, 43, -1, -1, -1, -1, 43, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, -1, 45, 45, -1, -1, 44, -1, -1, -1, -1, 44, 44, -1, -1, -1, 45, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 48, -1, -1, -1, -1, 49, -1, -1, -1, -1, 48, -1, -1, -1, -1, -1, 48, -1, -1, -1, 50, 48, 48, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 48, 48, 48 },
        { -1, 51, 51, 51, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 53, -1, -1, -1, -1, 54, -1, -1, -1, -1, -1, 52, -1, 51, 51, -1, -1, -1, -1, -1, -1, -1, -1, 51, -1, -1, -1 },
        { -1, 55, 55, 55, 55, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 55, 55, -1, -1, -1, -1, -1, -1, -1, -1, 55, -1, -1, -1 },
        { -1, 56, -1, -1, -1, -1, 56, -1, -1, -1, -1, 56, -1, -1, -1, -1, -1, 56, -1, -1, -1, 56, 56, 56, -1, -1, -1, -1, -1, -1, -1, -1, 57, 57, 57, 57, -1, -1, -1, 56, 56, 56 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1 },
        { -1, 62, 62, 62, 62, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, 62, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1 },
        { -1, 63, -1, -1, -1, -1, 63, -1, -1, -1, -1, 63, -1, -1, -1, -1, -1, 63, -1, -1, -1, 63, 63, 63, -1, -1, -1, -1, 64, 65, -1, -1, 63, 63, 63, 63, -1, -1, -1, 63, 63, 63 },
        { -1, 66, 66, 66, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 66, 66, -1, -1, -1, -1, -1, -1, -1, -1, 66, -1, -1, -1 },
        { -1, 67, -1, -1, -1, -1, 67, -1, -1, -1, -1, 67, -1, -1, -1, -1, -1, 67, -1, -1, -1, 67, 67, 67, -1, -1, -1, -1, 67, 67, 68, 69, 67, 67, 67, 67, -1, -1, -1, 67, 67, 67 },
        { -1, 70, 71, 72, 73, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 75, 76, -1, -1, -1, -1, -1, -1, -1, -1, 74, -1, -1, -1 },
        { -1, 77, -1, -1, -1, -1, 77, -1, -1, 78, -1, 77, 80, -1, -1, -1, -1, 77, -1, -1, -1, 77, 77, 77, 79, -1, -1, -1, 77, 77, 77, 77, 77, 77, 77, 77, -1, -1, -1, 77, 77, 77 }
    };

    int[][] PRODUCTIONS = 
    {
        {  8, 44, 15 },
        { 46, 41, 45 },
        { 44 },
        {  0 },
        { 47 },
        { 48 },
        { 50, 51 },
        { 52 },
        { 53 },
        {  9 },
        { 19 },
        { 17 },
        { 26 },
        { 20, 39, 52, 42,  3, 40 },
        {  2, 54 },
        { 42,  2, 54 },
        {  0 },
        {  2, 49 },
        { 57 },
        { 58 },
        { 59 },
        { 61 },
        { 55 },
        { 56 },
        { 37, 62 },
        { 38, 62 },
        {  6, 39, 63, 42, 64, 40 },
        { 11, 39, 64, 40 },
        { 62 },
        { 62 },
        { 24, 39, 65, 40 },
        { 66,  2, 67 },
        {  5, 42 },
        {  0 },
        { 42, 66,  2, 67 },
        {  0 },
        { 23, 39, 68, 40 },
        { 62, 69 },
        { 42, 62, 69 },
        {  0 },
        { 18, 62, 70, 60, 15 },
        {  0 },
        { 14, 70 },
        { 48, 41, 71 },
        { 48, 41, 71 },
        {  0 },
        { 12, 70, 28, 62 },
        { 73, 72 },
        {  0 },
        {  7, 73, 72 },
        { 22, 73, 72 },
        { 74 },
        { 27 },
        { 16 },
        { 21, 73 },
        { 77, 75 },
        {  0 },
        { 76, 77 },
        { 33 },
        { 34 },
        { 35 },
        { 36 },
        { 79, 78 },
        {  0 },
        { 29, 79, 78 },
        { 30, 79, 78 },
        { 81, 80 },
        {  0 },
        { 31, 81, 80 },
        { 32, 81, 80 },
        {  2, 82 },
        {  3 },
        {  4 },
        {  5 },
        { 39, 62, 40 },
        { 29, 81 },
        { 30, 81 },
        {  0 },
        { 10 },
        { 25 },
        { 13, 39, 62, 40 }
    };

    String[] PARSER_ERROR =
    {
        "",
        "esperado EOF", //"Era esperado fim de programa",
        "esperado identificador", //"Era esperado id",
        "esperado constante_int", //"Era esperado cInt",
        "esperado constante_float", //"Era esperado cFloat",
        "esperado constante_string", //"Era esperado cString",
        "esperado add", //"Era esperado pr_add",
        "esperado and", //"Era esperado pr_and",
        "esperado begin", //"Era esperado pr_begin",
        "esperado bool", //"Era esperado pr_bool",
        "esperado count", //"Era esperado pr_count",
        "esperado delete", //"Era esperado pr_delete",
        "esperado do", //"Era esperado pr_do",
        "esperado elementOf", //"Era esperado pr_elementOf",
        "esperado else", //"Era esperado pr_else",
        "esperado end", //"Era esperado pr_end",
        "esperado false", //"Era esperado pr_false",
        "esperado float", //"Era esperado pr_float",
        "esperado if", //"Era esperado pr_if",
        "esperado int", //Era esperado pr_int",
        "esperado list", //"Era esperado pr_list",
        "esperado not", //"Era esperado pr_not",
        "esperado or", //"Era esperado pr_or",
        "esperado print", //"Era esperado pr_print",
        "esperado read", //"Era esperado pr_read",
        "esperado size", //"Era esperado pr_size",
        "esperado string", //"Era esperado pr_string",
        "esperado true", //"Era esperado pr_true",
        "esperado until", //"Era esperado pr_until",
        "esperado +", //"Era esperado \"+\"",
        "esperado -", //"Era esperado \"-\"",
        "esperado *", //"Era esperado \"*\"",
        "esperado /", //"Era esperado \"/\"",
        "esperado ==", //"Era esperado \"==\"",
        "esperado ~=", //"Era esperado \"~=\"",
        "esperado <", //"Era esperado \"<\"",
        "esperado >", //"Era esperado \">\"",
        "esperado =", //"Era esperado \"=\"",
        "esperado <-", //"Era esperado \"<-\"",
        "esperado (", //"Era esperado \"(\"",
        "esperado )", //"Era esperado \")\"",
        "esperado ;", //"Era esperado \";\"",
        "esperado ,", //"Era esperado \",\"",
        "esperado begin", //"<programa> inválido",
        "esperado identificador  do  if  print  read  tipo", //"<lista_de_instrucoes> inválido",
        "esperado identificador  do  end  if  print  read  end  tipo", //"<lista_de_instrucoes1> inválido",
        "esperado identificador  do  if  print  read  tipo", //"<instrucao> inválido",
        "esperado tipo", //"<declaracao_de_variaveis> inválido",
        
        "esperado identificador  do  if  print  read", //"<comando> inválido",
        "esperado add  delete  =  <-", //"<comando1> inválido",
        
        "esperado tipo", //"<tipo> inválido",
        "esperado identificador", //"<lista_de_identificadores> inválido",
        "esperado tipo primitivo", //"<tipo_simples> inválido",
        "esperado list", //"<tipo_lista> inválido",
        "esperado ;  ,", //"<repete_id> inválido",
        "esperado =  <-", //"<comando_de_atribuicao1> inválido",
        "esperado add  delete", //"<comando_de_manipulacao_de_listas1> inválido",
        "esperado read", //"<comando_de_entrada_de_dados> inválido",
        "esperado print", //"<comando_de_saida_de_dados> inválido",
        "esperado if", //"<comando_de_selecao> inválido",
        "esperado else  end", //"<comando_de_selecao1> inválido",
        "esperado do", //"<comando_de_repeticao> inválido",
        "esperado expressão", //"<expressao> inválido",
        "esperado identificador  constante_int  constante_float  constante_string  false  not  true  +  -  (", //"<elemento> inválido",
        "esperado identificador  constante_int  constante_float  constante_string  false  not  true  +  -  (", //"<posicao> inválido",
        "esperado identificador  constante_string", //"<lista_de_entrada> inválido",
        "esperado identificador  constante_string", //"<string> inválido",
        "esperado ,  )", //"<repete_id_entrada> inválido",
        "esperado expressão", //"<lista_de_expressoes> inválido",
        "esperado ,  )", //"<repete_expressao> inválido", 
        "esperado identificador  do  if  print  read  ", //"<lista_de_comandos> inválido",
        "esperado identificador  do  if  print  read  until", //"<repete_comando> inválido",
        "esperado expressão", //"<expressao_> inválido",
        "esperado expressão", //"<valor> inválido",
        "esperado expressão", //"<relacional> inválido",
        "esperado expressão", //"<relacional_> inválido",
        "esperado ==  ~=  <  >", //"<operador_relacional> inválido",
        "esperado expressão", //"<aritmetica> inválido",
        "esperado expressão", //"<aritmetica_> inválido",
        "esperado expressão", //"<termo> inválido",
        "esperado expressão", //"<termo_> inválido",
        "esperado expressão", //"<fator> inválido",
        "esperado expressão", //"<fator_> inválido"
    };
}
